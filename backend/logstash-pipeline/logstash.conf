input {
        mongodb {
            uri => 'mongodb://mapledocs-mongodb:27017/DB'
            placeholder_db_dir => '/opt/logstash/'
            placeholder_db_name => 'logstash_sqlite.db'
            collection => 'COLL'
            batch_size => 1
        }
}
filter {
    mutate {
        copy => { "_id" => "[@metadata][_id]"}
        remove_field => ["_id"]
    }
    clone {
        clones => ["private_removed"]
    }
    ruby {
        code => '
            type = event.get("type")
            if (type == "private_removed")
                @log_entry_hash = eval(event.get("log_entry"))
                event.to_hash.keys.each { |field|
                    @log_entry_hash["fieldsToHide"].to_a.each { |fieldToHide|
                        if (field.start_with?("dmp_" + fieldToHide))
                            event.remove(field)
                            break
                        end
                    }
                }
            end
            '
        }
    mutate {
        copy => { "type" => "[@metadata][type]"}
        remove_field => ["type", "log_entry"] # Also remove the log_entry because it contains the private fields
    }
}
output {
        stdout {
                codec => rubydebug {
                    metadata => true
                }
        }
        if [@metadata][type] == "private_removed" {
            elasticsearch {
                action => "index"
                index => "madmps_private"
                hosts => ["mapledocs-elasticsearch:9200"]
            }
        }
        else {
            elasticsearch {
                action => "index"
                index => "madmps"
                hosts => ["mapledocs-elasticsearch:9200"]
            }
        }
}